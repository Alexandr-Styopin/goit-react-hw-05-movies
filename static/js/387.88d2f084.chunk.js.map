{"version":3,"file":"static/js/387.88d2f084.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","fethAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  border: solid 1px #4fbfa5;\n  width: 100px;\n  height: 150px;\n  object-fit: contain;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../fethAPI';\nimport { Image } from './Cast.styled';\n\nexport default function Cast() {\n  const [actors, setActors] = useState([]);\n  const { moviesId } = useParams();\n  const BASE_URL = 'https://image.tmdb.org/t/p/original';\n  useEffect(() => {\n    getMovieCredits(moviesId)\n      .then(data => {\n        setActors(data.cast);\n      })\n      .catch(err => console.log(err));\n  }, [moviesId]);\n\n  return (\n    <div>\n      <ul>\n        {actors.map(({ id, name, profile_path }) => (\n          <li key={id}>\n            <p>{name}</p>\n            <Image\n              src={`${BASE_URL}${\n                profile_path ?? '/wwemzKWzjKYJFfCeiB57q3r4Bcm.png'\n              }`}\n              alt={name}\n              width=\"150px\"\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export {\n  getTrending,\n  getMovies,\n  getMoviesDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nconst API_KEY = 'aa1d2a2b8177ac3b5ad3698898d78d80';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function getTrending() {\n  return await fetch(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n\nasync function getMovies(inputValue) {\n  return await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${inputValue}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n\nasync function getMoviesDetails(movieId) {\n  return await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n\nasync function getMovieCredits(movieId) {\n  return await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\nasync function getMovieReviews(movieId) {\n  return await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n"],"names":["Image","styled","Cast","useState","actors","setActors","moviesId","useParams","useEffect","getMovieCredits","then","data","cast","catch","err","console","log","map","id","name","profile_path","src","alt","width","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","API_KEY","BASE_URL","getTrending","fetch","response","ok","Error","status","json","getMovies","inputValue","getMoviesDetails","movieId","getMovieReviews"],"sourceRoot":""}